<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="com.szh.mapper.personMapper"就是com.szh.mapper(包名)+personMapper(personMapper.xml文件去除后缀) -->
<mapper namespace="com.fh.shiro.mapper.RoleMapper">
  <!--
  id:sql语句唯一标识
  parameterType:指定传入参数类型(对应javaBean类型，写其所在的路径 写原始型会自动包装为包装类)
o  resultType：返回结果类型
  #{}:占位符，起到占位作用，如果传入的是原始型，那么括号中的变量名称可以随意定义
-->

  <select id="queryRoleTree" resultType="java.util.Map" parameterType="int">
    select r.id,r.rolename name,if(ur.userId is NULL,'false','true') checked,
     '/static/orgimg/4.png' icon from t_role r
    LEFT JOIN
    (select userId,roleId from t_user_role where userId = #{userId}) ur
    on r.id = ur.roleId
  </select>


  <select id="queryOrganTree" resultType="com.fh.shiro.bean.userRole.UserRoleVo" parameterType="int">
    select o.*,if(r.roleId is NULL,'false','true') checked from (
    select CONCAT("dept_",id) id,deptName name, CONCAT("dept_",pid) pid , 0 sex ,1 type from t_dept
    UNION ALL
    select  CONCAT("user_",id) id,realname name , CONCAT("dept_",deptId) deptId,sex ,2 type from t_user) o
    LEFT JOIN
    (select userId,roleId from t_user_role where roleId = #{roleId}) r
    on o.id =concat('user_',r.userId)
  </select>


  <select id="queryRoleTreeByRightId" parameterType="int" resultType="java.util.Map">
    select r.id,r.roleName name,0 pId,if(rr.rightId is null ,'false','true') checked
      from t_role r
    left join
    (select roleId,rightId from t_role_right where rightId = #{rightId}) rr
    on r.id = rr.roleId
  </select>


  <select id="queryRoleListByUserId" resultType="com.fh.shiro.bean.role.RolePo" parameterType="java.lang.Integer">
    select r.* from t_role r
    left join t_user_role ur on r.id = ur.roleId
    where ur.userId = #{id}
  </select>
</mapper>
